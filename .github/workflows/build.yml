name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and Analyze
        env:
          # SonarQube
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

          # Application
          APPLICATION_SECURITY_JWT_SECRETKEY: ${{ secrets.APPLICATION_SECURITY_JWT_SECRETKEY }}
          CUSTOM_ADMIN_USERNAME: ${{ secrets.CUSTOM_ADMIN_USERNAME }}
          CUSTOM_ADMIN_PASSWORD: ${{ secrets.CUSTOM_ADMIN_PASSWORD }}
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  test-docker:
    name: Test Docker Compose
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.16.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      - name: Start Docker Compose
        run: |
          docker-compose up -d

      - name: Verify Application Health
        run: |
          sleep 10
          curl -f http://localhost:8080/actuator/health || exit 1

      - name: Stop Docker Compose
        if: always()
        run: docker-compose down
